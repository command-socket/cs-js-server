{"version":3,"sources":["tests/ts/tests/manual/test-server.ts"],"names":["core_1","require","delicate","__importStar","command_socket_server_1","main","__awaiter","console","log","myCommandRegistry","CommandRegistry","addInlineCommand","params","result","value","server","CommandSocketServer","prompt","close"],"mappings":"gkBAMA,MAAAA,OAAAC,QAAA,wBACAC,SAAAC,aAAAF,QAAA,kBACAG,wBAAAH,QAAA,+BAEMI,KAA4B,IAA0BC,eAAA,OAAA,OAAA,GAAA,YAI3DC,QAAQC,IAAI,qCAcZ,IAAIC,EAAsD,IAAIT,OAAAU,gBAE9DD,EAAkBE,iBAAiB,MAAcC,GAAqCN,eAAA,OAAA,OAAA,GAAA,YAErF,IAAIO,EAAiB,EAErB,IAAK,IAAIC,KAASF,EAAQC,GAAUC,EAEpC,OAAOD,MAIR,IAAIE,EAA+C,IAAIX,wBAAAY,oBA5BlC,KA4B4DP,GAEjFF,QAAQC,IAAI,qBAEZN,SAASe,OAAO,KAEfV,QAAQC,IAAI,qBACZO,EAAOG,aArCmDZ,eAAA,OAAA,OAAA,GAAA,YAI3DC,QAAQC,IAAI,qCAcZ,IAAIC,EAAsD,IAAIT,OAAAU,gBAE9DD,EAAkBE,iBAAiB,MAAcC,GAAqCN,eAAA,OAAA,OAAA,GAAA,YAErF,IAAIO,EAAiB,EAErB,IAAK,IAAIC,KAASF,EAAQC,GAAUC,EAEpC,OAAOD,MAIR,IAAIE,EAA+C,IAAIX,wBAAAY,oBA5BlC,KA4B4DP,GAEjFF,QAAQC,IAAI,qBAEZN,SAASe,OAAO,KAEfV,QAAQC,IAAI,qBACZO,EAAOG","file":"test-server.js","sourcesContent":["/*\n *\tCreated by Trevor Sears <trevorsears.main@gmail.com>.\n *\t11:31 PM -- November 23rd, 2019.\n *\tProject: @command-socket/server\n */\n\nimport { CommandRegistry, CommandSetStructure } from \"@command-socket/core\";\nimport * as delicate from \"@t99/delicate\";\nimport { CommandSocketServer } from \"../../command-socket-server\";\n\nconst main: () => Promise<void> = async (): Promise<void> => {\n\t\n\tconst PORT: number = 5437;\n\t\n\tconsole.log(\"Starting server on port \" + PORT + \"...\\n\");\n\t\n\tinterface LocalCommandSet extends CommandSetStructure {\n\t\t\n\t\tsum: {\n\t\t\t\n\t\t\tname: \"sum\",\n\t\t\tparameter: number[],\n\t\t\treturn: number\n\t\t\t\n\t\t};\n\t\t\n\t}\n\t\n\tlet myCommandRegistry: CommandRegistry<LocalCommandSet> = new CommandRegistry<LocalCommandSet>();\n\t\n\tmyCommandRegistry.addInlineCommand(\"sum\", async (params: number[]): Promise<number> => {\n\t\t\n\t\tlet result: number = 0;\n\t\t\n\t\tfor (let value of params) result += value;\n\t\t\n\t\treturn result;\n\t\t\n\t});\n\t\n\tlet server: CommandSocketServer<LocalCommandSet> = new CommandSocketServer(PORT, myCommandRegistry);\n\t\n\tconsole.log(\"Server running...\");\n\t\n\tdelicate.prompt((): void => {\n\t\t\n\t\tconsole.log(\"\\nClosing server.\");\n\t\tserver.close();\n\t\t\n\t});\n\t\n};\n\nmain();"]}